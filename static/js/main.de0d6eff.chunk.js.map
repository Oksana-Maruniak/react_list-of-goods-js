{"version":3,"sources":["components/GoodCard/GoodCard.jsx","components/GoodList/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodGard","good","GoodList","goods","map","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","goodsFromServer","App","useState","sortField","setSortField","visibleGoods","setVisibleGoods","className","onClick","sort","good1","good2","localeCompare","type","cn","length","reverse","ReactDOM","render","document","getElementById"],"mappings":"mPAMeA,EANE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,oBAAI,UAAQ,OAAZ,SACGA,KCAQC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,SCC3BI,EAAsB,OACtBC,EAAoB,SAEbC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAASF,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KA+BA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UAEE,wBACEC,QAxBe,WACrBF,EACE,YAAID,GAAcI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,OAE/DP,EAAaN,IAqBPe,KAAK,SACLN,UAAWO,IACT,SACA,UACA,CAAE,WAAYX,IAAcL,IANhC,iCAaA,wBACEU,QA9Ba,WACnBF,EACE,YAAID,GAAcI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMK,OAASJ,EAAMI,WAEhEX,EAAaL,IA2BPc,KAAK,SACLN,UAAWO,IACT,SACA,aACA,CAAE,WAAYX,IAAcJ,IANhC,4BAYA,wBACES,QAnCc,WACpBF,EAAgB,YAAID,GAAcW,YAmC5BH,KAAK,SACLN,UAAWO,IACT,SACA,aACA,CAAE,WAAYX,IANlB,qBAYCA,GACC,wBACEK,QAnEI,WACZF,EAAgBN,GAChBI,EAAa,KAkELS,KAAK,SACLN,UAAU,4BAHZ,sBAWJ,cAAC,EAAD,CAAUX,MAAOS,QCzGvBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.de0d6eff.chunk.js","sourcesContent":["const GoodGard = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n\nexport default GoodGard;\n","import GoodGard from '../GoodCard/GoodCard';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodGard good={good} key={good} />\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\nimport { useState } from 'react';\nimport { GoodList } from './components/GoodList/GoodList';\n\nconst SORT_FIELD_ALPHABET = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n\n  // if (sortField) {\n  //   visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n  //   visibleGoods.sort((good1, good2) => good1.length - good2.length);\n  // }\n\n  const reset = () => {\n    setVisibleGoods(goodsFromServer);\n    setSortField('');\n  };\n\n  const sortByAlphabet = () => {\n    setVisibleGoods(\n      [...visibleGoods].sort((good1, good2) => good1.localeCompare(good2)),\n    );\n    setSortField(SORT_FIELD_ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setVisibleGoods(\n      [...visibleGoods].sort((good1, good2) => good1.length - good2.length),\n    );\n    setSortField(SORT_FIELD_LENGTH);\n  };\n\n  const sortByReverse = () => {\n    setVisibleGoods([...visibleGoods].reverse());\n    // setSortField('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n\n        <button\n          onClick={sortByAlphabet}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET },\n          )}\n\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={sortByReverse}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': sortField },\n          )}\n        >\n          Reverse\n        </button>\n\n        {sortField && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}