{"version":3,"sources":["components/GoodCard/GoodCard.jsx","components/GoodList/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodGard","good","GoodList","goods","map","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","goodsFromServer","App","useState","sortField","setSortField","isReveresed","setIsReversed","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","onClick","type","cn","prevState","ReactDOM","render","document","getElementById"],"mappings":"mPAMeA,EANE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,oBAAI,UAAQ,OAAZ,SACGA,KCAQC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,SCC3BI,EAAsB,OACtBC,EAAoB,SAEbC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAqCF,oBAAS,GAA9C,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EA7BR,SAA0BX,EAA1B,GAA8D,IAA3BO,EAA0B,EAA1BA,UAAWE,EAAe,EAAfA,YACtCG,EAAa,YAAOZ,GAqB1B,OAnBIO,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKL,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMP,GAAaQ,EAAMR,GAElC,QACE,OAAO,MAKXE,GACFG,EAAcK,UAGTL,EAOcM,CACnBd,EAAiB,CAAEG,YAAWE,gBAUhC,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UAEE,wBACEC,QAAS,kBAAMZ,EAAaN,IAC5BmB,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CAAE,WAAYf,IAAcL,IANhC,iCAaA,wBACEkB,QAAS,kBAAMZ,EAAaL,IAC5BkB,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,WAAYf,IAAcJ,IANhC,4BAYA,wBACEiB,QArCQ,kBAAMV,GAAc,SAAAa,GAAS,OAAKA,MAsC1CF,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,YAAab,IANnB,sBAYEF,GAAaE,IACb,wBACEW,QAhDI,WACZZ,EAAa,IACbE,GAAc,IA+CNW,KAAK,SACLF,UAAU,4BAHZ,sBAWJ,cAAC,EAAD,CAAUnB,MAAOW,QChHvBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8a472b13.chunk.js","sourcesContent":["const GoodGard = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n\nexport default GoodGard;\n","import GoodGard from '../GoodCard/GoodCard';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodGard good={good} key={good} />\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\nimport { useState } from 'react';\nimport { GoodList } from './components/GoodList';\n\nconst SORT_FIELD_ALPHABET = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, { sortField, isReveresed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReveresed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReveresed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, isReveresed },\n  );\n\n  const reverse = () => setIsReversed(prevState => !prevState);\n\n  const reset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET },\n          )}\n\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReveresed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReveresed) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}